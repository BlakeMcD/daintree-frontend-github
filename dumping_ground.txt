COLOUR PALETTE
DARK = #1A1A1A
LIGHTER DARK = #464646
LIGHT GREY = #bababa
LLIGHTEST GREY = #e8e8e8
WHITE = #ffffff
FADED GOLD = #F0EACE

CODE I USED FOR THE SUCCESSFUL STORE COUNT BUTTON
    import { useSelector, useDispatch } from 'react-redux'
    import { increment } from '../actions/actionCreator'


    function NavStores() {

        const count = useSelector(state => state.count)

        const dispatch = useDispatch()

        return (
            <>
                    <button onClick={() => dispatch(increment())}>Increment Count</button>
                    <p>Count: {count}</p>
                
            </>
        )
    }

    export default NavStores

    CODE I USED FOR RENDERING OF ITEMS FROM API - CODE FROM NAVCOLLECTION.JS
    // RENDER PRODUCTS
    const renderProducts = () => {
        if (products.length === 0) {
            return (
                <p>Products Loading</p>
            )
        }
        else {
            return (
                <div className="collectionContainer">
                    {
                        products.map( (product) => {
                            return (
                                <>
                                    <ItemContainer
                                        key={product.id}
                                        prod_name={product.name}
                                        prod_price={product.price_cents}
                                        prod_stocks={product.stocks}
                                        prod_images={product.images}
                                        prod_store_logo={product.store.logo_url_square}
                                    />
                                </>
                            )
                        })
                    }
                </div>  
            )
        }
    }


    THE CODE THAT WOULD LEAD TO GOING TO A SUBPAGE AFTER CLICKING ON A LINK
    <div className="headerBox__navIcon">
                        <NavLink text={"MEN"} linkTo={"./men"}/>
                    </div>
                    <div className="headerBox__navIcon">
                        <NavLink text={"WOMEN"} linkTo={"./women"}/>
                    </div>


ETHICAL STORE DETAILS
Name: ADAY
Description: Designed to be seasonless and with a focus on ease-of-wear (hello, wrinkle-free fabrics), ADAYâ€™s pieces are sure to live a long life in your closet.
Logo URL Square: https://scontent.fmel10-1.fna.fbcdn.net/v/t1.18169-9/15219601_710618665762585_8491969803489385657_n.png?_nc_cat=109&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=xLuvdzLP_2gAX_laQl6&_nc_ht=scontent.fmel10-1.fna&oh=40a221c198f51a9a047d981237a1884c&oe=61D493A6
Logo URL Landscape: https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/v1426453123/lkewst0dfp5tjljrhqou.png


HOW TO GET SUBMITTING NESTED ATTRIBUTES WORKING
const requestOptions = {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/json', 
                accept: 'application/json'
                }, 
            body: JSON.stringify({ 
                product: {
                    uid:productUid,
                    name:productName,
                    category:productCategory,
                    sub_category:productSubCategory, 
                    description:productDescription, 
                    gender:productGender,
                    age_group:productAgeGroup,
                    store_id:productStoreId, 

                    images_attributes: [
                        {
                        img_colour:productImageColour,
                        img_url:productImageUrl
                        }
                    ],

                    stocks_attributes: [
                        {
                        colour:productStockColour,
                        size:productStockSize,
                        amount:productStockAmount
                        }
                    ]      
                }
            })
        };


TEST

JESS CODE: 
export function fetchGoals() {
    return (dispatch) => {
        dispatch({ type: "START_ADDING_GOALS_REQUEST" });
        fetch("http://localhost:3000/goals", {
            method: 'get',
            headers: {
                'content-type': 'application/json',
                'accept': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('jwt')}`
            }
        })
        .then(res => res.json())
        .then(goals => {
            dispatch({
                type: "ADD_GOALS",
                goals
            })
        })
    };
}

ORIGINAL BRAND OVERVIEW
.brandOverview {
  display: inline-block;
}

.brandOverview__image {
  float: left;
  /* width: 300px; */
  
}
.brandOverview__text {
  /* float: left;
  width: 400px; */
}